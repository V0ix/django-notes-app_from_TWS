# .github/workflows/ci-cd.yml
name: CI-CD with Docker Compose + ArgoCD

on:
  push:
    branches: ["main"]

permissions:
  contents: write   # needed to push manifest changes

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Compute image vars
        id: vars
        run: |
          USER=${{ secrets.DOCKER_HUB_USERNAME }}
          TAG=${{ github.sha }}
          IMAGE=$USER/myapp   # ðŸ‘ˆ set your repo name here
          echo "image=$IMAGE" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build image with Docker Compose
        run: |
          IMAGE=${{ steps.vars.outputs.image }}
          TAG=${{ steps.vars.outputs.tag }}
          docker compose build django_app
          docker tag django_app $IMAGE:$TAG
          docker push $IMAGE:$TAG

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
      - name: Set image vars
        run: |
          echo "image=vishal09taware/myapp" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Update manifest image tag
        run: |
          FILE=k8s/deployment.yaml
          NEW_IMAGE="${{ steps.vars.outputs.image }}:${{ steps.vars.outputs.tag }}"
          yq -i '(.spec.template.spec.containers[] | select(.name=="demo").image) = strenv(NEW_IMAGE)' "$FILE"
        env:
          NEW_IMAGE: "${{ steps.vars.outputs.image }}:${{ steps.vars.outputs.tag }}"

      - name: Commit & push manifest change
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add k8s/deployment.yaml
          git commit -m "ci: update image to ${NEW_IMAGE}" || echo "No changes to commit"
          git push
        env:
          NEW_IMAGE: "${{ steps.vars.outputs.image }}:${{ steps.vars.outputs.tag }}"

